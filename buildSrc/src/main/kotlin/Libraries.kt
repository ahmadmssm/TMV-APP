object Libraries {
    const val testRunner = "androidx.test:runner:${Versions.testRunner}"
    const val onetrustSDK = "com.onetrust.cmp:native-sdk:${Versions.onetrustSDK}"
    const val stdlib = "org.jetbrains.kotlin:kotlin-stdlib:${Versions.kotlin}"
    const val androidXCore = "androidx.core:core:${Versions.androidXCore}"
    const val stdlibJDK = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlin}"
    const val ktxCore = "androidx.core:core-ktx:${Versions.ktxCore}"
    const val appCompat = "androidx.appcompat:appcompat:${Versions.appCompat}"
    const val material = "com.google.android.material:material:${Versions.material}"
    const val lifecycleCommon = "androidx.lifecycle:lifecycle-common-java8:${Versions.lifecycle}"
    const val lifecycleProcess = "androidx.lifecycle:lifecycle-process:${Versions.lifecycle}"
    const val constraintLayout = "androidx.constraintlayout:constraintlayout:${Versions.constraintLayout}"
    const val viewBinding = "androidx.databinding:viewbinding:${Versions.viewBinding}"
    const val ktorAndroid = "io.ktor:ktor-client-android:${Versions.ktor}"
    const val ktorOkHttpEngine = "io.ktor:ktor-client-okhttp:${Versions.ktor}"
    const val ktorIos = "io.ktor:ktor-client-darwin:${Versions.ktor}"
    const val ktorNSURLSessionEngine = "io.ktor:ktor-client-ios:${Versions.ktor}"
    const val ktorCore = "io.ktor:ktor-client-core:${Versions.ktor}"
    const val ktorContentNegotiation = "io.ktor:ktor-client-content-negotiation:${Versions.ktor}"
    const val ktorJson = "io.ktor:ktor-serialization-kotlinx-json:${Versions.ktor}"
    const val ktorSerialization = "io.ktor:ktor-client-serialization:${Versions.ktor}"
    const val ktorfit = "de.jensklingenberg.ktorfit:ktorfit-lib:${Versions.ktorfit}"
    const val ktorfitKSP = "de.jensklingenberg.ktorfit:ktorfit-ksp:${Versions.ktorfit}"
    const val ktorLogging = "io.ktor:ktor-client-logging:${Versions.ktor}"
    const val kotlinSerialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:${Versions.kotlinSerialization}"
    const val okhttpLoggingInterceptor = "com.squareup.okhttp3:logging-interceptor:${Versions.okhttpLoggingInterceptor}"
    const val chucker = "com.github.chuckerteam.chucker:library:${Versions.chucker}"
    const val chuckerNoOp = "com.github.chuckerteam.chucker:library-no-op:${Versions.chucker}"
    const val kotlinAtomicity = "org.jetbrains.kotlinx:atomicfu:${Versions.kotlinAtomicity}"
    const val coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.coroutines}"
    const val kotlinxDatetime = "org.jetbrains.kotlinx:kotlinx-datetime:${Versions.kotlinxDatetime}"
    const val realm = "io.realm.kotlin:library-base:${Versions.realm}"
    const val logback = "ch.qos.logback:logback-classic:${Versions.logback}"
    const val activityX = "androidx.activity:activity-ktx:${Versions.activityX}"
    const val fragmentX = "androidx.fragment:fragment-ktx:${Versions.fragmentX}"
    // Compose
    const val composeUI = "androidx.compose.ui:ui:${Versions.compose}"
    const val composeTooling = "androidx.compose.ui:ui-tooling:${Versions.compose}"
    const val composePreview = "androidx.compose.ui:ui-tooling-preview:${Versions.compose}"
    const val composeFoundation = "androidx.compose.foundation:foundation:${Versions.compose}"
    const val composeMaterial = "androidx.compose.material:material:${Versions.compose}"
    const val activityCompose = "androidx.activity:activity-compose:${Versions.activityCompose}"
    //
    const val androidXWorkRuntime = "androidx.work:work-runtime-ktx:${Versions.androidXWorkRuntime}"
    const val securityCrypto = "androidx.security:security-crypto:${Versions.securityCrypto}"
    const val hyperionCore = "com.willowtreeapps.hyperion:hyperion-core:${Versions.hyperion}"
    const val hyperionSharedPreferences = "com.willowtreeapps.hyperion:hyperion-shared-preferences:${Versions.hyperion}"
    const val hyperionNoop = "com.willowtreeapps.hyperion:hyperion-core-no-op:${Versions.hyperion}"
    //
    const val utiq = "com.github.Utiq-tech.UTIQ-Mobile-SDK:utiq:${Versions.utiq}"
    const val funnelConnect = "com.github.Teavaro.FunnelConnect-Mobile-SDK:funnelConnect:${Versions.funnelConnect}"
}
